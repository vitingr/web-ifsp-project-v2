name: 'Project Build and Deploy'

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - infra/tf/**
      - '.github/workflows/infra_**'
    branches:
      - master

env:
  PROJECT_NAME: ${{ secrets.PROJECT_NAME }}

jobs:
  build-deploy:
    name: 'Build and Deploy'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20.9.0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Install PNPM
        run: |
          npm install -g pnpm@9.15.1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-arn: ${{ secrets.AWS_ROLE }}
          certificate-arn: ${{ secrets.AWS_ROLE }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}

      - name: Build
        run: |
          pnpm install --frozen-lockfile
          pnpm build

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.0

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        env:
          TF_VAR_region: ${{ secrets.AWS_REGION }}
          TF_VAR_aws_bucket_name: ${{ secrets.AWS_BUCKET_NAME }}
          TF_VAR_aws_bucket_key: ${{ secrets.AWS_BUCKET_KEY_NAME }}
          TF_VAR_project_name: ${{ secrets.PROJECT_NAME }}
        run: |
          cd infra/tf
          terraform init -reconfigure \
            -backend-config="bucket=${{ secrets.AWS_BUCKET_NAME }}" \
            -backend-config="key=${{ secrets.AWS_BUCKET_KEY_NAME }}" \
            -backend-config="region=${{ secrets.AWS_REGION }}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        if: github.event_name == 'pull_request'
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: |
          cd infra/tf
          terraform apply -auto-approve
